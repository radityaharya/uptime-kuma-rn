name: Android Build Release APK

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip-build]') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.x.x
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Get pnpm Store Directory
        id: pnpm-store
        run: |
          echo "store-path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-store.outputs.store-path }}
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-pnpm-

      - name: Cache Gradle Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.0.0

      - name: Cache Android Build
        uses: actions/cache@v4
        with:
          path: |
            **/build
          key: ${{ runner.os }}-android-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-build-

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install Dependencies
        run: pnpm install

      - name: Build Android App
        id: build
        run: |
          eas build --platform android --profile production --local --output ${{ github.workspace }}/app-release.apk

      - name: Upload APK Artifact
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ github.workspace }}/app-release.apk
          retention-days: 7