name: Android App APK Build

on:
  push:
    branches:
      - master

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip-build]') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Setup repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install pnpm
        uses: pnpm/action-setup@v3.0.0
        with:
          version: 8.x.x
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: |
          STORE_PATH="$(pnpm store path)"
          echo "STORE_PATH=${STORE_PATH}" >> "$GITHUB_ENV"
          echo "store-path=${STORE_PATH}" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-store.outputs.store-path }}
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-pnpm-

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.0.0

      - name: Cache Android build
        uses: actions/cache@v4
        with:
          path: |
            **/build
          key: ${{ runner.os }}-android-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-build-

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Build Android app
        id: build
        run: |
          eas build --platform android --profile production --local --output ${{ github.workspace }}/app-release.apk
        continue-on-error: true

      - name: Upload APK artifact
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ github.workspace }}/app-release.apk
          retention-days: 7
          if-no-files-found: error

      - name: Create Release
        if: steps.build.outcome == 'success'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        if: steps.build.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      # - name: Notify build status
      #   if: always()
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const status = '${{ steps.build.outcome }}' === 'success' ? '✅ Success' : '❌ Failed';
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.name,
      #         body: `Build status: ${status}`
      #       });